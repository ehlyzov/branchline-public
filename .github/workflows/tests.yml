name: Test Suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  interpreter:
    name: Interpreter Tests
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.summary.outputs.status }}
      tests: ${{ steps.summary.outputs.tests }}
      color: ${{ steps.summary.outputs.color }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Chrome
        id: setup-chrome
        uses: browser-actions/setup-chrome@v1

      - name: Configure Chrome launcher
        run: |
          cat <<'SCRIPT' > chrome-with-flags.sh
          #!/usr/bin/env bash
          exec "${{ steps.setup-chrome.outputs.chrome-path }}" --no-sandbox --disable-setuid-sandbox --disable-dev-shm-usage --disable-gpu "$@"
          SCRIPT
          chmod +x chrome-with-flags.sh
          echo "CHROME_BIN=$PWD/chrome-with-flags.sh" >> $GITHUB_ENV
          echo "KARMA_CHROME_BIN=$PWD/chrome-with-flags.sh" >> $GITHUB_ENV

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Run interpreter tests
        id: run-tests
        run: ./gradlew --no-daemon :interpreter:clean :interpreter:allTests
        continue-on-error: true

      - name: Prepare Branchline JS CLI
        if: ${{ always() }}
        run: |
          ./gradlew --no-daemon :cli:prepareJsCliPackage
          npm install --no-audit --no-fund --prefix cli/build/cliJsPackage

      - name: Summarize interpreter tests
        id: summary
        if: ${{ always() }}
        run: node .github/scripts/junit-summary.mjs interpreter

      - name: Update interpreter badge
        if: ${{ always() && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: RubbaBoy/BYOB@v1.3.0
        with:
          NAME: interpreter-test
          LABEL: 'Interpreter Test'
          STATUS: '${{ steps.summary.outputs.status }} (${{ steps.summary.outputs.tests }})'
          COLOR: '${{ steps.summary.outputs.color }}'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: badges

      - name: Fail if interpreter tests failed
        if: ${{ steps.summary.outputs.status != 'passing' }}
        run: exit 1

  vm:
    name: VM Tests
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.summary.outputs.status }}
      tests: ${{ steps.summary.outputs.tests }}
      color: ${{ steps.summary.outputs.color }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Chrome
        id: setup-chrome
        uses: browser-actions/setup-chrome@v1

      - name: Configure Chrome launcher
        run: |
          cat <<'SCRIPT' > chrome-with-flags.sh
          #!/usr/bin/env bash
          exec "${{ steps.setup-chrome.outputs.chrome-path }}" --no-sandbox --disable-setuid-sandbox --disable-dev-shm-usage --disable-gpu "$@"
          SCRIPT
          chmod +x chrome-with-flags.sh
          echo "CHROME_BIN=$PWD/chrome-with-flags.sh" >> $GITHUB_ENV
          echo "KARMA_CHROME_BIN=$PWD/chrome-with-flags.sh" >> $GITHUB_ENV

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Run VM tests
        id: run-tests
        run: ./gradlew --no-daemon :vm:clean :vm:allTests
        continue-on-error: true

      - name: Prepare Branchline JS CLI
        if: ${{ always() }}
        run: |
          ./gradlew --no-daemon :cli:prepareJsCliPackage
          npm install --no-audit --no-fund --prefix cli/build/cliJsPackage

      - name: Summarize VM tests
        id: summary
        if: ${{ always() }}
        run: node .github/scripts/junit-summary.mjs vm

      - name: Update VM badge
        if: ${{ always() && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: RubbaBoy/BYOB@v1.3.0
        with:
          NAME: vm-test
          LABEL: 'VM Test'
          STATUS: '${{ steps.summary.outputs.status }} (${{ steps.summary.outputs.tests }})'
          COLOR: '${{ steps.summary.outputs.color }}'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: badges

      - name: Fail if VM tests failed
        if: ${{ steps.summary.outputs.status != 'passing' }}
        run: exit 1

  conformance:
    name: Conformance Tests
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.summary.outputs.status }}
      tests: ${{ steps.summary.outputs.tests }}
      color: ${{ steps.summary.outputs.color }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Chrome
        id: setup-chrome
        uses: browser-actions/setup-chrome@v1

      - name: Configure Chrome launcher
        run: |
          cat <<'SCRIPT' > chrome-with-flags.sh
          #!/usr/bin/env bash
          exec "${{ steps.setup-chrome.outputs.chrome-path }}" --no-sandbox --disable-setuid-sandbox --disable-dev-shm-usage --disable-gpu "$@"
          SCRIPT
          chmod +x chrome-with-flags.sh
          echo "CHROME_BIN=$PWD/chrome-with-flags.sh" >> $GITHUB_ENV
          echo "KARMA_CHROME_BIN=$PWD/chrome-with-flags.sh" >> $GITHUB_ENV

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Run conformance tests
        id: run-tests
        run: ./gradlew --no-daemon :conformance-tests:clean :conformance-tests:allTests
        continue-on-error: true

      - name: Prepare Branchline JS CLI
        if: ${{ always() }}
        run: |
          ./gradlew --no-daemon :cli:prepareJsCliPackage
          npm install --no-audit --no-fund --prefix cli/build/cliJsPackage

      - name: Summarize conformance tests
        id: summary
        if: ${{ always() }}
        run: node .github/scripts/junit-summary.mjs conformance-tests

      - name: Update conformance badge
        if: ${{ always() && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: RubbaBoy/BYOB@v1.3.0
        with:
          NAME: conformance-test
          LABEL: 'Conformance Test'
          STATUS: '${{ steps.summary.outputs.status }} (${{ steps.summary.outputs.tests }})'
          COLOR: '${{ steps.summary.outputs.color }}'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: badges

      - name: Fail if conformance tests failed
        if: ${{ steps.summary.outputs.status != 'passing' }}
        run: exit 1

  cli:
    name: CLI Tests
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.summary.outputs.status }}
      tests: ${{ steps.summary.outputs.tests }}
      color: ${{ steps.summary.outputs.color }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Run CLI tests
        id: run-tests
        run: ./gradlew --no-daemon :cli:jvmTest :cli:jsNodeTest
        continue-on-error: true

      - name: Prepare Branchline JS CLI
        if: ${{ always() }}
        run: |
          ./gradlew --no-daemon :cli:prepareJsCliPackage
          npm install --no-audit --no-fund --prefix cli/build/cliJsPackage

      - name: Summarize CLI tests
        id: summary
        if: ${{ always() }}
        run: node .github/scripts/junit-summary.mjs cli

      - name: Update CLI badge
        if: ${{ always() && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: RubbaBoy/BYOB@v1.3.0
        with:
          NAME: cli-test
          LABEL: 'CLI Test'
          STATUS: '${{ steps.summary.outputs.status }} (${{ steps.summary.outputs.tests }})'
          COLOR: '${{ steps.summary.outputs.color }}'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: badges

      - name: Fail if CLI tests failed
        if: ${{ steps.summary.outputs.status != 'passing' }}
        run: exit 1
