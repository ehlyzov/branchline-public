name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: playground/package-lock.json

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Install playground dependencies
        run: npm ci
        working-directory: ./playground

      - name: Build interpreter for JavaScript
        run: ./gradlew :interpreter:jsBrowserProductionLibraryDistribution

      - name: Build playground assets
        run: npm run build
        working-directory: ./playground

      - name: Build documentation with MkDocs
        run: mkdocs build --site-dir site

      - name: Prepare deployment directory
        run: |
          # Create deployment structure
          mkdir -p deploy
          
          # Copy built documentation site
          cp -r site/* deploy/
          
          # Copy playground assets to assets directory (where demo.html expects them)
          mkdir -p deploy/assets
          # The playground build puts assets in docs/assets/, copy them to deploy/assets/
          if [ -d "docs/assets" ]; then
            cp -r docs/assets/* deploy/assets/
            echo "Copied playground assets to deploy/assets/"
          else
            echo "No assets directory found"
          fi
          
          # Copy playground to deployment root for direct access  
          cp -r playground deploy/playground
          
          echo "Deployment structure:"
          find deploy -maxdepth 2 -type f | head -10

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './deploy'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4