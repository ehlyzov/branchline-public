{
  "title": "Summarize JUnit XML for status badges",
  "description": "Adapted from .github/scripts/junit-file-summary.bl used in the badge workflow. Ingests JUnit XML, normalizes suites, and emits totals for downstream badge generation.",
  "program": [
    "LET suites = [];",
    "LET direct = msg.testsuite;",
    "IF direct != NULL THEN {",
    "    LET normalized = IF IS_OBJECT(direct) THEN [direct] ELSE direct;",
    "    FOR suite IN normalized {",
    "        SET suites = APPEND(suites, suite);",
    "    }",
    "}",
    "",
    "LET container = msg.testsuites;",
    "IF container != NULL THEN {",
    "    LET branch = container.testsuite ?? container;",
    "    LET normalizedContainer = IF IS_OBJECT(branch) THEN [branch] ELSE branch;",
    "    FOR suite IN normalizedContainer {",
    "        SET suites = APPEND(suites, suite);",
    "    }",
    "}",
    "",
    "LET metrics = [];",
    "FOR suite IN suites {",
    "    LET item = {",
    "        name: suite[\"@name\"] ?? suite[\"@package\"] ?? \"unnamed suite\",",
    "        tests: suite[\"@tests\"],",
    "        failures: suite[\"@failures\"],",
    "        errors: suite[\"@errors\"],",
    "        skipped: suite[\"@skipped\"]",
    "    };",
    "    SET metrics = APPEND(metrics, item);",
    "}",
    "",
    "LET totals = { tests: 0, failures: 0, errors: 0, skipped: 0 };",
    "FOR entry IN metrics {",
    "    SET totals.tests = totals.tests + NUMBER(entry.tests ?? 0);",
    "    SET totals.failures = totals.failures + NUMBER(entry.failures ?? 0);",
    "    SET totals.errors = totals.errors + NUMBER(entry.errors ?? 0);",
    "    SET totals.skipped = totals.skipped + NUMBER(entry.skipped ?? 0);",
    "}",
    "",
    "LET failed = totals.failures + totals.errors;",
    "LET status = IF totals.tests == 0 THEN \"error\"",
    "    ELSE IF failed == 0 THEN \"passing\"",
    "    ELSE \"failing\";",
    "",
    "OUTPUT {",
    "    status: status,",
    "    totals: totals,",
    "    suites: metrics",
    "}"
  ],
  "input": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<testsuites name=\"All\" tests=\"12\" failures=\"1\" errors=\"0\" skipped=\"2\">\n  <testsuite name=\"api.tests.UserTest\" tests=\"5\" failures=\"1\" errors=\"0\" skipped=\"1\">\n    <testcase name=\"creates_user\" classname=\"api.tests.UserTest\" time=\"0.45\"/>\n    <testcase name=\"updates_user\" classname=\"api.tests.UserTest\" time=\"0.32\"/>\n  </testsuite>\n  <testsuite name=\"web.tests.CartTest\" tests=\"7\" failures=\"0\" errors=\"0\" skipped=\"1\">\n    <testcase name=\"adds_to_cart\" classname=\"web.tests.CartTest\" time=\"0.12\"/>\n  </testsuite>\n</testsuites>\n",
  "inputFormat": "xml"
}
